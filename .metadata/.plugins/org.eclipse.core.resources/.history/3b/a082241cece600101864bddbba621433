import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;


public class LOCCounter {

	/**
	 * @param args
	 */
	static int totalLines;
	static boolean showCode;
	String nameOfFile;
	ArrayList<String> finalFile;

	
	public static void main(String[] args) throws IOException {
		if (args.length == 0)
			System.out.println("USAGE: ");
		if (args[0].equals("-p"))
			showCode = true;
		int i;
		if (showCode){
			i = 1;
		}
		else i=0;
		totalLines = 0;
		for (; i < args.length; i++) {
			LOCCounter loc = new LOCCounter();
			loc.finalFile = new ArrayList<String>();
			File file = new File(args[i]); //TODO: Include Path
			loc.ReadFile(file);
			loc.PrintFile();
		}
		System.out.println("Total: " + totalLines);
	}

	

	private void CountLineNumber(BufferedReader br) throws IOException{
		String line = null; 
		line = br.readLine();
		
		while(!line.contains("class")) {
			line = br.readLine();
		}
		
		/*int aspas =0, coment=0;
		int indOpen,indClose,indAspas;
		int i;*/
		
		while(line != null){
			//indOpen = line.indexOf("/*");
			//indClose = line.indexOf("*/");
			//indAspas = line.indexOf('"');
			
			/*if((indAspas < indOpen) || (aspas > 0)) {
				
				finalFile[finalFile.length] = new String();
				
				finalFile[finalFile.length]
			}*/
			if (!line.trim().equals("")) {
				totalLines++;
				finalFile.add(totalLines + ": " + line);
			}
			line = br.readLine();
		}
	}
	
	private void ReadFile(File file) throws IOException{
		BufferedReader br = new BufferedReader(new FileReader(file.getName()));
		nameOfFile = file.getName();
		CountLineNumber(br);
		br.close();
	}
	
	private void PrintFile(){
		System.out.println(this.nameOfFile + ": " + finalFile.size() + " LOC");
		if (showCode)
			for (Iterator iterator = finalFile.iterator(); iterator.hasNext();) {
				String finalFileLine = (String) iterator.next();
				System.out.println(finalFileLine);
			}
	}

}
